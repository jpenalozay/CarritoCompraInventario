version: '3.8'

services:
  # ========================================
  # API BACKEND
  # ========================================
  ecommerce-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ecommerce-analytics-api
    hostname: api
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - API_VERSION=v1
      
      # Cassandra Configuration
      - CASSANDRA_HOSTS=cassandra
      - CASSANDRA_PORT=9042
      - CASSANDRA_KEYSPACE=ecommerce_analytics
      - CASSANDRA_USERNAME=cassandra
      - CASSANDRA_PASSWORD=cassandra
      - CASSANDRA_DATACENTER=datacenter1
      
      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=ecommerce123
      - REDIS_DB_API_CACHE=0
      - REDIS_DB_SESSIONS=1
      - REDIS_DB_METRICS=2
      
      # Security & Performance
      - JWT_SECRET=ecommerce_analytics_jwt_secret_2025
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=1000
      - CACHE_TTL_SECONDS=300
      
      # CORS
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173
      
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - ecommerce-network
    depends_on:
      - cassandra
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # ========================================
  # FRONTEND DASHBOARD
  # ========================================
  ecommerce-dashboard:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ecommerce-analytics-dashboard
    hostname: dashboard
    ports:
      - "5173:5173"
    environment:
      - VITE_API_BASE_URL=http://localhost:3001/api/v1
      - VITE_APP_TITLE=E-commerce Analytics Dashboard
      - VITE_ENVIRONMENT=production
    volumes:
      - ./frontend/dist:/app/dist
    networks:
      - ecommerce-network
    depends_on:
      - ecommerce-api
    restart: unless-stopped

  # ========================================
  # LOAD BALANCER / REVERSE PROXY
  # ========================================
  nginx:
    image: nginx:alpine
    container_name: ecommerce-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - ecommerce-network
    depends_on:
      - ecommerce-api
      - ecommerce-dashboard
    restart: unless-stopped

# ========================================
# USAR LA RED EXISTENTE
# ========================================
networks:
  ecommerce-network:
    external: true

# ========================================
# VOLUMES PARA PERSISTENCIA
# ========================================
volumes:
  api-logs:
    driver: local 